---
# THESE TASKS ARE INCLUDED IN THE deploy.yml PLAYBOOK
# TO BE EXECUTED AFTER CLONING THE REPO AT THE APP FOLDER
# THEY SET RAILS SECRETS, JSON LOGS AND database.yml CONFIG
- name: Ensure rails secrets file is present.
  template:
    src: templates/secrets.yml.j2
    dest: "{{ app_directory }}/config/secrets.yml"
    owner: "{{ app_user }}"
    group: "{{ app_user }}"
    mode: 0664
  notify: restart nginx

- name: Set Rails structured logging (1/2). Update rails app Gemfile.
  blockinfile:
    path: "{{ app_directory }}/Gemfile"
    block: |
      #
      # FOR STRUCTURED LOGGING
      # SEE https://kartar.net/2015/12/structured-logging/
      gem 'lograge', group: :production
      gem 'logstash-event', group: :production
      gem 'logstash-logger', group: :production
      #
    insertafter: "# gem 'capistrano-rails', group: :development"
  notify: restart nginx

- name: Set Rails structured logging(2/2). Update rails app /config/environments/production.rb file
  blockinfile:
    path: "{{ app_directory }}/config/environments/production.rb"
    block: |
      #
      # FOR STRUCTURED LOGGING
      # SEE https://kartar.net/2015/12/structured-logging/          
        config.log_level = :info
        config.lograge.enabled = true
        config.lograge.formatter = Lograge::Formatters::Logstash.new
        config.logger = LogStashLogger.new(type: :file, path: "{{ app_directory }}/log/production.json", sync: true)
      #
    insertbefore: "end"
  notify: restart nginx 

- name: Set Rails Database Config for TCP connection
  lineinfile:
    path: "{{ app_directory }}/config/database.yml"
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
    state: present
    insertafter : '  password:'
  with_items:
    - {
      regexp: "  socket:",
      line: "#  socket: /var/run/mysqld/mysqld.sock     # Ubuntu 14.04"
    }
    - {
      regexp: " port: 3306",
      line: "  port: 3306"
    }
    - {
      regexp: "  host:",
      line: "  host: {{ groups['db'][0] }}"
    }
    - {
      regexp: "  password: root",
      line: "  password: {{ app_name }}"
    }
    - {
      regexp: "  username: root",
      line: "  username: {{ app_name }}"
    }
  notify: restart nginx

